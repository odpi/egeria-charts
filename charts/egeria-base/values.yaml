# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the Egeria project.
---

# --- General Egeria configuration ---
egeria:
  # Set to INFO, WARNING, DEBUG if needed
  logging: 
  version: "3.14"
  # repositoryType: "local-graph-repository"
  repositoryType: "in-memory-repository"
  debug: false
  persistence: true
  # The userid used for admin ops (no security enabled by default)
  user: garygeeke
  # The name of the servers to provision on the platform
  serverName: mds1
  viewServerName: view1
  # Organization name for multi-tenant UI
  viewOrg: org
  # Cohort name
  cohort: mds
  # Set to override the k8s storage class for persistent volume claim
  storageClass:
  # Default to 8GB
  storageSize: 8Gi
  # Whether a default configuration is performed or not. Note that the environment for
  # presentation server is hardcoded based on the viewOrg and viewServerName above EVEN
  # if the configuration is not actually performed. Note that no autostart setup
  # will be done either if set to false. Defaults to true
  config: true

# Additional connectors/libraries to be made available in egeria server chassis containers
# This is just an example. You can have a list of connectors
#extralibs:
#- url: https://search.maven.org/remotecontent?filepath=org/odpi/egeria/egeria-connector-xtdb/3.9/egeria-connector-xtdb-3.9-jar-with-dependencies.jar
#  filename: egeria-connector-xtdb-3.9-jar-with-dependencies.jar

# --- Additional environment variables - inserted directly into configmap. Can use helm template directives
#extraEnv: |
#  VAR1: value1
#  VAR2: value2


# --- Exposing/setup of network services ---
service:
  # Change this to 'NodePort' if you want externalized addresses for our services via a k8s NodePort.
  # If not, expose the service manually after deployment ie using a LoadBalancer
  #
  # For example to expose the egeria lab stateful set you might use:
  # kubectl expose odpi-egeria-lab-dev --name egeria-dev
  type: ClusterIP
  #type: NodePort
  nodeport:
    platform: 31080
    presentation: 31091
    platformdebug: 31005

# Standard helm best practice
rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

# Specific processing features 
options:
  jobs:
    config:
      # Timeout for configuration job
      backOffLimit: 60
      # Default will be true, but during dev set to false
      # This setting will control if the k8s job (and hence pod/logs) are deleted after egeria configuration
      # Set to false to assist in debugging 
      jobdelete: true
      # If set to true helm install will not complete successfully until configuration is complete
      usehook: false

# --- Docker image sources ---

# Defaults for the images (can be overridden here or individually, see comment below)
# Note for egeria provided images we use the version specified above
imageDefaults:
  registry: quay.io
  namespace: odpi
  tag: latest
  # -- pullPolicy is now set automatically to 'Always' for SNAPSHOTs, and 'IfNotPresent' for releases
  #pullPolicy: IfNotPresent

# The following section defines all of the DOCKER images being used by this chart. Normally they should be left as is,
# but are exposed here in case the user wishes to extend. By default, each will use the 'imageDefaults' above, but
# these can be individually overridden for each image, if desired, by providing a subkey for 'namespace', 'tag' or
# 'pullPolicy' with the value to use for the override (if you want to use the public Docker registry, use
# 'docker.io/library' as the registry override, and set namespace to be your user or organization id).
#
#  To build from egeria source - (example)
#  mvn clean install -Ddocker -Ddocker.registry=localhost:5000 -Ddocker.repo=odpi
image:
  egeria:
    name: egeria
  presentation:
    name: egeria-react-ui
    tag: "3.8.0"
  configure:
    name: egeria-configure

# Normally we install the strimzi operator as part of the Chart. However this requires admin permissions, and
# will create cluster-scoped resources. Set to false to skip this when in a restricted environment, or needing multiple
# installs of egeria charts in the same cluster. Requires the strimzi operator to be
# installed on the cluster by an admin, or a prior install
# If strimzi is installed, a Kafka cluster is also configured. You can change NodePort options of the external listener.
strimzi:
  enabled: true
  advertisedHost: localhost
  bootstrapNodePort: 32000

# If you allow (as is default) this chart to install the strimzi operator, this setting will
# then allow it to work across all namespaces - so for example it will work if installing another
# version of the chart, as long as that install has strimzi.enabled=false.
# However it is better to install strimzi manually for these more complex environments, so the default is false
#
# helm repo add strimzi https://strimzi.io/charts/
# helm repo update && helm install strimzi strimzi/strimzi-kafka-operator --set watchAnyNamespace=true
strimzi-kafka-operator:
  watchAnyNamespace: false
